{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <section class="post-form">
            <h2>Create a New Post</h2>
            <form action="/posts" method="POST">
                <input type="text" name="title" placeholder="Title" required>
                <textarea name="content" id="post-content" placeholder="Write your post..." required></textarea>

                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <input type="text" id="emoji-search" placeholder="Search emojis" oninput="searchEmojis()">
                <div id="emoji-grid" class="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    <section class="posts-list">
        {{#if posts.length}}
        <ul>
            {{#each posts}}
                {{> post this user=../user}}            
            {{/each}}
        </ul>
        {{else}}
            <p>No posts yet. Be the first to post!</p>
        {{/if}}
    </section>
</section>

<script>
    let allEmojis = [];  // Global list to hold all emojis

    function toggleEmojiPanel() {
        const container = document.getElementById('emoji-container');
        container.style.display = container.style.display === 'none' ? 'block' : 'none';

        if (container.style.display === 'block' && allEmojis.length === 0) {
            fetchEmojis();
        }
    }

    function fetchEmojis() {
        fetch('https://emoji-api.com/emojis?access_key=864e355b4555e446b0a730844427105e88cfa064')
            .then(response => response.json())
            .then(data => {
                allEmojis = data;
                displayEmojis(allEmojis);
            })
            .catch(error => console.error('Error fetching emojis:', error));
    }

    function displayEmojis(emojis, limit = 200) {
        const container = document.getElementById('emoji-grid');
        container.innerHTML = '';  // Clear previous results
        emojis.slice(0, limit).forEach(emoji => {
            const emojiElement = document.createElement('span');
            emojiElement.textContent = emoji.character;
            emojiElement.title = emoji.slug;  // Showing the emoji name on hover
            emojiElement.style.cursor = 'pointer';
            emojiElement.onclick = () => insertEmoji(emoji.character);
            container.appendChild(emojiElement);
        });
    }

    function searchEmojis() {
        const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
        const filteredEmojis = allEmojis.filter(emoji =>
            emoji.slug.includes(searchTerm) || emoji.character.includes(searchTerm)
        );
        displayEmojis(filteredEmojis);
    }

    function insertEmoji(emoji) {
        const textarea = document.getElementById('post-content');
        const start = textarea.selectionStart;
        const end = textarea.selectionEnd;
        const text = textarea.value;
        textarea.value = text.slice(0, start) + emoji + text.slice(end);
        textarea.setSelectionRange(start + emoji.length, start + emoji.length);
        textarea.focus();  // Keep focus on the textarea
    }
</script>
